<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bazl.dna.database.service.mapper.RegionInfoMapper">
  <resultMap id="BaseResultMap" type="com.bazl.dna.database.service.model.po.RegionInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="region_code" jdbcType="VARCHAR" property="regionCode" />
    <result column="region_name" jdbcType="VARCHAR" property="regionName" />
    <result column="region_short_name" jdbcType="VARCHAR" property="regionShortName" />
    <result column="region_level" jdbcType="INTEGER" property="regionLevel" />
    <result column="parent_region_code" jdbcType="VARCHAR" property="parentRegionCode" />
  </resultMap>


  <resultMap id="BaseResultMapVo" type="com.bazl.dna.database.service.model.vo.RegionInfoVo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="region_code" jdbcType="VARCHAR" property="value" />
    <result column="region_name" jdbcType="VARCHAR" property="label" />
    <result column="region_short_name" jdbcType="VARCHAR" property="regionShortName" />
    <result column="region_level" jdbcType="INTEGER" property="regionLevel" />
    <result column="parent_region_code" jdbcType="VARCHAR" property="parentRegionCode" />
  </resultMap>


  <sql id="Base_Column_List">
    id, region_code, region_name, region_short_name, region_level, parent_region_code
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from region_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from region_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bazl.dna.database.service.model.po.RegionInfo">
    insert into region_info (id, region_code, region_name, 
      region_short_name, region_level, parent_region_code
      )
    values (#{id,jdbcType=INTEGER}, #{regionCode,jdbcType=VARCHAR}, #{regionName,jdbcType=VARCHAR}, 
      #{regionShortName,jdbcType=VARCHAR}, #{regionLevel,jdbcType=TINYINT}, #{parentRegionCode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bazl.dna.database.service.model.po.RegionInfo">
    insert into region_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="regionCode != null">
        region_code,
      </if>
      <if test="regionName != null">
        region_name,
      </if>
      <if test="regionShortName != null">
        region_short_name,
      </if>
      <if test="regionLevel != null">
        region_level,
      </if>
      <if test="parentRegionCode != null">
        parent_region_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="regionCode != null">
        #{regionCode,jdbcType=VARCHAR},
      </if>
      <if test="regionName != null">
        #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="regionShortName != null">
        #{regionShortName,jdbcType=VARCHAR},
      </if>
      <if test="regionLevel != null">
        #{regionLevel,jdbcType=TINYINT},
      </if>
      <if test="parentRegionCode != null">
        #{parentRegionCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bazl.dna.database.service.model.po.RegionInfo">
    update region_info
    <set>
      <if test="regionCode != null">
        region_code = #{regionCode,jdbcType=VARCHAR},
      </if>
      <if test="regionName != null">
        region_name = #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="regionShortName != null">
        region_short_name = #{regionShortName,jdbcType=VARCHAR},
      </if>
      <if test="regionLevel != null">
        region_level = #{regionLevel,jdbcType=TINYINT},
      </if>
      <if test="parentRegionCode != null">
        parent_region_code = #{parentRegionCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bazl.dna.database.service.model.po.RegionInfo">
    update region_info
    set region_code = #{regionCode,jdbcType=VARCHAR},
      region_name = #{regionName,jdbcType=VARCHAR},
      region_short_name = #{regionShortName,jdbcType=VARCHAR},
      region_level = #{regionLevel,jdbcType=TINYINT},
      parent_region_code = #{parentRegionCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByLevel" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from region_info
    where region_level = #{regionLevel,jdbcType=INTEGER}
  </select>

  <select id="selectByParentRegionCode" parameterType="com.bazl.dna.database.service.model.vo.RegionInfoVo" resultMap="BaseResultMapVo">
    select
    <include refid="Base_Column_List" />
    from region_info
    where parent_region_code = #{parentRegionCode,jdbcType=INTEGER}
  </select>

  <select id="selectByParentCode" parameterType="com.bazl.dna.database.service.model.po.RegionInfo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from region_info
    where parent_region_code = #{parentRegionCode,jdbcType=INTEGER}
  </select>

  <select id="selectByRegionCode" parameterType="com.bazl.dna.database.service.model.po.RegionInfo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from region_info
    where region_code = #{regionCode,jdbcType=INTEGER}
  </select>

  <select id="selectByLevelList" parameterType="com.bazl.dna.database.service.model.vo.RegionInfoVo" resultMap="BaseResultMapVo">
    select
    <include refid="Base_Column_List" />
    from region_info
    where region_level = #{regionLevel,jdbcType=INTEGER}
  </select>

</mapper>