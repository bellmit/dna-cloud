<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bazl.dna.lims.core.dao.LabExtractInfoMapper" >
  <resultMap id="BaseResultMap" type="com.bazl.dna.lims.core.model.po.LabExtractInfo" >
    <id column="EXTRACT_ID" property="extractId" jdbcType="VARCHAR" />
    <result column="TASK_ID" property="taskId" jdbcType="VARCHAR" />
    <result column="EXTRACT_NO" property="extractNo" jdbcType="VARCHAR" />
    <result column="BOARD_NO" property="boardNo" jdbcType="VARCHAR" />
    <result column="SAMPLE_COUNT" property="sampleCount" jdbcType="DECIMAL" />
    <result column="EXTRACT_METHOD" property="extractMethod" jdbcType="VARCHAR" />
    <result column="EXTRACT_DATETIME" property="extractDatetime" jdbcType="TIMESTAMP" />
    <result column="EXTRACT_PERSON1" property="extractPerson1" jdbcType="VARCHAR" />
    <result column="EXTRACT_PERSON2" property="extractPerson2" jdbcType="VARCHAR" />
    <result column="CREATE_DATETIME" property="createDatetime" jdbcType="TIMESTAMP" />
    <result column="CREATE_PERSON" property="createPerson" jdbcType="VARCHAR" />
    <result column="UPDATE_DATETIME" property="updateDatetime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_PERSON" property="updatePerson" jdbcType="VARCHAR" />
    <result column="DELETE_FLAG" property="deleteFlag" jdbcType="VARCHAR" />
    <result column="DELETE_DATETIME" property="deleteDatetime" jdbcType="TIMESTAMP" />
    <result column="DELETE_PERSON" property="deletePerson" jdbcType="VARCHAR" />
    <result column="KIT" property="kit" jdbcType="VARCHAR" />
    <result column="EQUIPMENT" property="equipment" jdbcType="VARCHAR" />
    <result column="EXTRACT_STAGE" property="extractStage" jdbcType="VARCHAR" />
    <result column="ORG_ID" property="orgId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="VOBaseResultMap" type="com.bazl.dna.lims.core.model.vo.LabExtractInfoVo" >
    <id column="EXTRACT_ID" property="entity.extractId" jdbcType="VARCHAR" />
    <result column="TASK_ID" property="entity.taskId" jdbcType="VARCHAR" />
    <result column="EXTRACT_NO" property="entity.extractNo" jdbcType="VARCHAR" />
    <result column="BOARD_NO" property="entity.boardNo" jdbcType="VARCHAR" />
    <result column="SAMPLE_COUNT" property="entity.sampleCount" jdbcType="DECIMAL" />
    <result column="EXTRACT_METHOD" property="entity.extractMethod" jdbcType="VARCHAR" />
    <result column="EXTRACT_DATETIME" property="entity.extractDatetime" jdbcType="TIMESTAMP" />
    <result column="EXTRACT_PERSON1" property="entity.extractPerson1" jdbcType="VARCHAR" />
    <result column="EXTRACT_PERSON2" property="entity.extractPerson2" jdbcType="VARCHAR" />
    <result column="CREATE_DATETIME" property="entity.createDatetime" jdbcType="TIMESTAMP" />
    <result column="CREATE_PERSON" property="entity.createPerson" jdbcType="VARCHAR" />
    <result column="UPDATE_DATETIME" property="entity.updateDatetime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_PERSON" property="entity.updatePerson" jdbcType="VARCHAR" />
    <result column="DELETE_FLAG" property="entity.deleteFlag" jdbcType="VARCHAR" />
    <result column="DELETE_DATETIME" property="entity.deleteDatetime" jdbcType="TIMESTAMP" />
    <result column="DELETE_PERSON" property="entity.deletePerson" jdbcType="VARCHAR" />
    <result column="KIT" property="entity.kit" jdbcType="VARCHAR" />
    <result column="EQUIPMENT" property="entity.equipment" jdbcType="VARCHAR" />
    <result column="EXTRACT_STAGE" property="entity.extractStage" jdbcType="VARCHAR" />
    <result column="ORG_ID" property="entity.orgId" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from LAB_EXTRACT_INFO
    where EXTRACT_ID = #{extractId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.bazl.dna.lims.core.model.po.LabExtractInfo" >
    insert into LAB_EXTRACT_INFO (EXTRACT_ID, TASK_ID, EXTRACT_NO, 
      BOARD_NO, SAMPLE_COUNT, EXTRACT_METHOD, 
      EXTRACT_DATETIME, EXTRACT_PERSON1, EXTRACT_PERSON2, 
      CREATE_DATETIME, CREATE_PERSON, UPDATE_DATETIME, 
      UPDATE_PERSON, DELETE_FLAG, DELETE_DATETIME, 
      DELETE_PERSON, KIT, EQUIPMENT,EXTRACT_STAGE,ORG_ID)
    values (#{extractId,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, #{extractNo,jdbcType=VARCHAR}, 
      #{boardNo,jdbcType=VARCHAR}, #{sampleCount,jdbcType=DECIMAL}, #{extractMethod,jdbcType=VARCHAR}, 
      #{extractDatetime,jdbcType=TIMESTAMP}, #{extractPerson1,jdbcType=VARCHAR}, #{extractPerson2,jdbcType=VARCHAR}, 
      #{createDatetime,jdbcType=TIMESTAMP}, #{createPerson,jdbcType=VARCHAR}, #{updateDatetime,jdbcType=TIMESTAMP}, 
      #{updatePerson,jdbcType=VARCHAR}, #{deleteFlag,jdbcType=VARCHAR}, #{deleteDatetime,jdbcType=TIMESTAMP}, 
      #{deletePerson,jdbcType=VARCHAR}, #{kit,jdbcType=VARCHAR}, #{equipment,jdbcType=VARCHAR}, #{extractStage,jdbcType=VARCHAR},#{orgId,jdbcType=VARCHAR})
  </insert>

  <!--      EXTRACT_DATETIME = #{extractDatetime,jdbcType=TIMESTAMP},-->
  <update id="updateByPrimaryKey" parameterType="com.bazl.dna.lims.core.model.po.LabExtractInfo" >
    update LAB_EXTRACT_INFO
    set TASK_ID = #{taskId,jdbcType=VARCHAR},
      EXTRACT_NO = #{extractNo,jdbcType=VARCHAR},
      BOARD_NO = #{boardNo,jdbcType=VARCHAR},
      SAMPLE_COUNT = #{sampleCount,jdbcType=DECIMAL},
      EXTRACT_METHOD = #{extractMethod,jdbcType=VARCHAR},
      EXTRACT_PERSON1 = #{extractPerson1,jdbcType=VARCHAR},
      EXTRACT_PERSON2 = #{extractPerson2,jdbcType=VARCHAR},
      EXTRACT_DATETIME = #{extractDatetime,jdbcType=TIMESTAMP},
      CREATE_DATETIME = #{createDatetime,jdbcType=TIMESTAMP},
      CREATE_PERSON = #{createPerson,jdbcType=VARCHAR},
      UPDATE_DATETIME = #{updateDatetime,jdbcType=TIMESTAMP},
      UPDATE_PERSON = #{updatePerson,jdbcType=VARCHAR},
      DELETE_FLAG = #{deleteFlag,jdbcType=VARCHAR},
      DELETE_DATETIME = #{deleteDatetime,jdbcType=TIMESTAMP},
      DELETE_PERSON = #{deletePerson,jdbcType=VARCHAR},
      KIT = #{kit,jdbcType=VARCHAR},
      EQUIPMENT = #{equipment,jdbcType=VARCHAR},
      EXTRACT_STAGE = #{extractStage,jdbcType=VARCHAR}
    where EXTRACT_ID = #{extractId,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select *
    from LAB_EXTRACT_INFO
    where EXTRACT_ID = #{extractId,jdbcType=VARCHAR}
  </select>

  <select id="selectByTaskId" parameterType="java.lang.String"  resultMap="BaseResultMap">
    select *
    from LAB_EXTRACT_INFO
    where TASK_ID = #{taskId,jdbcType=VARCHAR}
  </select>

  <select id="selectAll" resultMap="BaseResultMap" >
    select *
    from LAB_EXTRACT_INFO
  </select>

  <select id="selectVoList" resultMap="VOBaseResultMap" parameterType="com.bazl.dna.lims.core.model.vo.LabExtractInfoVo">
    select * from (
    select rownum as rn, t.* from (
    select distinct lei.* from LAB_EXTRACT_INFO lei
    left join lab_extract_sample les on les.extract_id = lei.extract_id
    left join lims_sample_info_dna lsid on lsid.sample_id = les.sample_id
    where lei.DELETE_FLAG = '0' and lei.EXTRACT_STAGE is not null
    <if test="_parameter != null">
      <include refid="VO_Query_Where_Clauses"/>
    </if>
    order by length(trim(lei.EXTRACT_NO)) desc, lei.EXTRACT_NO desc
    ) t where rownum &lt;=#{rows}
    ) where rn &gt;#{offset}
  </select>

  <select id="selectVOCount" parameterType="com.bazl.dna.lims.core.model.vo.LabExtractInfoVo" resultType="int">
    select count(distinct lei.extract_id) from LAB_EXTRACT_INFO lei
    left join lab_extract_sample les on les.extract_id = lei.extract_id
    left join lims_sample_info_dna lsid on lsid.sample_id = les.sample_id
    where lei.DELETE_FLAG = '0' and lei.EXTRACT_STAGE is not null
    <if test="_parameter != null">
      <include refid="VO_Query_Where_Clauses"/>
    </if>
  </select>

  <select id="selectByCaseId" resultMap="BaseResultMap" parameterType="java.lang.String">
    select distinct lei.* from LAB_EXTRACT_INFO lei
    left join LAB_EXTRACT_SAMPLE les on les.extract_id = lei.extract_id
    left join lims_sample_info_dna lsid on lsid.sample_id = les.sample_id and lsid.delete_flag='0'
    where lsid.case_id= #{caseId,jdbcType=VARCHAR}
    order by lei.CREATE_DATETIME asc
  </select>

  <sql id="VO_Query_Where_Clauses">
    <if test="entity.extractNo != null">
      and lei.EXTRACT_NO like '%'||#{entity.extractNo,jdbcType=VARCHAR}||'%'
    </if>
    <if test="entity.extractStage != null">
      and lei.EXTRACT_STAGE like '%'||#{entity.extractStage,jdbcType=VARCHAR}||'%'
    </if>
    <if test="acceptStartDatetime != null">
      and lei.CREATE_DATETIME &gt;= #{acceptStartDatetime,jdbcType=TIMESTAMP}
    </if>
    <if test="acceptEndDatetime != null">
      and lei.CREATE_DATETIME &lt;= #{acceptEndDatetime,jdbcType=TIMESTAMP}
    </if>
    <if test="sampleNo != null">
      and lsid.SAMPLE_NO like CONCAT(CONCAT('%',#{sampleNo,jdbcType=VARCHAR}),'%')
    </if>
    <if test="entity.orgId != null and entity.orgId !=''">
      and lei.ORG_ID = #{entity.orgId,jdbcType=VARCHAR}
    </if>
  </sql>

</mapper>